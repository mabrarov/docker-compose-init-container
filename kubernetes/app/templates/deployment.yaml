apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: {{ include "app.deploymentName" . | quote }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    {{- include "app.componentLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "app.matchLabels" . | nindent 6 }}
      {{- include "app.componentLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- include "app.componentLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.pull.secret }}
      imagePullSecrets:
        - name: {{ include "app.imagePullSecretName" . | quote }}
      {{- end }}
      containers:
        - name: {{ .Values.containerName | quote }}
          image: {{ include "app.mainContainer.imageFullName" . | quote }}
          imagePullPolicy: {{ .Values.image.pull.policy | quote }}
          env:
            - name: "JAVA_TOOL_OPTIONS"
              value: {{ include "app.finalJvmOptions" . | quote }}
            - name: "TRUST_STORE_FILE"
              value: "{{ .Values.app.configDir }}/truststore.jks"
            - name: "TRUST_STORE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.secretName" . | quote }}
                  key: "trustStorePassword"
            - name: "SERVER_PORT"
              value: {{ .Values.app.port | quote }}
          ports:
            - name: {{ include "app.containerPortName" . | quote }}
              containerPort: {{ .Values.app.port }}
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: {{ include "app.containerPortName" . | quote }}
              scheme: {{ include "app.portScheme" . | upper | quote }}
            initialDelaySeconds: {{ .Values.liveness.initialDelay }}
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: {{ include "app.containerPortName" . | quote }}
              scheme: {{ include "app.portScheme" . | upper | quote }}
            initialDelaySeconds: {{ .Values.readiness.initialDelay }}
          securityContext:
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
            runAsNonRoot: {{ .Values.securityContext.readOnlyRootFilesystem }}
            {{- if .Values.securityContext.runAsUser }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
            {{- end }}
            {{- if .Values.securityContext.runAsGroup }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            {{- end }}
          volumeMounts:
            - mountPath: "{{ .Values.app.configDir }}"
              name: "config-volume"
              readOnly: true
            - mountPath: "/tmp"
              name: "app-tmp-volume"
      initContainers:
        - name: {{ .Values.init.containerName | quote }}
          image: {{ include "app.initContainer.imageFullName" . | quote }}
          imagePullPolicy: {{ .Values.init.image.pull.policy | quote }}
          env:
            - name: "TRUST_STORE_FILE"
              value: "{{ .Values.app.configDir }}/truststore.jks"
            - name: "TRUST_STORE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.secretName" . | quote }}
                  key: "trustStorePassword"
          securityContext:
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
            runAsNonRoot: {{ .Values.securityContext.readOnlyRootFilesystem }}
            {{- if .Values.securityContext.runAsUser }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
            {{- end }}
            {{- if .Values.securityContext.runAsGroup }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.app.configDir | quote }}
              name: "config-volume"
            - mountPath: "/tmp"
              name: "init-tmp-volume"
      volumes:
        - name: "config-volume"
          emptyDir: {}
        - name: "app-tmp-volume"
          emptyDir: {}
        - name: "init-tmp-volume"
          emptyDir: {}
