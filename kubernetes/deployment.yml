apiVersion: 'v1'
kind: 'List'
items:
  - apiVersion: 'v1'
    kind: 'Secret'
    metadata:
      name: 'app-ingress-tls'
    type: 'kubernetes.io/tls'
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ5ekNDQTdPZ0F3SUJBZ0lKQUlyMlg3ck0xRlJZTUEwR0NTcUdTSWIzRFFFQkRRVUFNRnd4Q3pBSkJnTlYKQkFZVEFsSlZNUTh3RFFZRFZRUUlFd1pOYjNOamIzY3hGekFWQmdOVkJBb1REbEJ5YVhaaGRHVWdVR1Z5YzI5dQpNU013SVFZRFZRUURFeHBVWlhOMElFTmxjblJwWm1sallYUmxJRUYxZEdodmNtbDBlVEFlRncweU1EQTNNRFl4Ck5UUXpNakZhRncwek1EQTNNRFF4TlRRek1qRmFNRnd4Q3pBSkJnTlZCQVlUQWxKVk1ROHdEUVlEVlFRSUV3Wk4KYjNOamIzY3hEekFOQmdOVkJBY1RCazF2YzJOdmR6RVhNQlVHQTFVRUNoTU9VSEpwZG1GMFpTQlFaWEp6YjI0eApFakFRQmdOVkJBTVRDV3h2WTJGc2FHOXpkRENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBT1FOeFlZTXEzNVFTc09KSUx3SHdoTi9ja3ZxbnRLZndSZWZkOXpsa3RRNTR1RlY4Rm53NzFyQ2lOSzIKS3M4VVcyOW1tY3Z1MzNZQ1d2SEZ3SG9UdVAwTXp5TzRhSGVSSU4rWTBsVzNlZU5WMFdpdlA4NCtodVpZa2FZQQpFR3pmU3pPQjJld0JUTlppVlordFVmZ1AydG13bEUvODVodDVENDZ4dUlGbGdycVhZWTM2MW5yYXpZWHJURHBpCldWNDhucmRaV0NVSkQyRTFiK0VIQXVLR2ozaEN4NTNhOWkrTzRXQ3NUSndDOEk4alg0U2xYYmhzL3Y5MHVvTnMKUHZtRWdkSk5WMy83SjF1R0dBOFROanR6c2FNOHJaTEhPOGZDTjM5Z05vSDlDSDk5Z1FzYStpWitKNUVGN2tKeQptNVhlZmxSSmYwLy9oblQzdHFjcmR3dVNmcittSUlmLzlTSktlWE03VURhN3R1dFgzWnpYNWpzZWdxa21TbGJPClpUcXBPeXJqMEJ2cVk2SVAwUXM3azIvS3lWM3VUYXZNMHlNMHNKdDhqbGNzRm5QUEpGeW9QZmtlU0crOWRiK0EKcFNNNG1RRXBITDh2eVVPNm5zTGZUV093MmtPVVBFOGNQZnRSWE1wWXV5djBHeFZQeDdsbmJsTWNteG1MaUxZTgpnMFBXa21LRUtUL0lUaG9FVkMwbThmZHhMcDl0VXZMSlFUdmhKOUl3aFU4dlVVYXpKQ24zNVFrV0dEOXlFTDRjCjl5MlR3YkY2K0MrM2pjMFp1UEFTQkpGYmx0ZDZ4ZGY5bDA5ZXB6RTZlUW9DKy9YK3VpV09NcHA1ejNvckNHaE4KUzYyLytHTXpuNEVwVVBVd1dhZm5pTFEzcURnZ3k2WWZJWXVQVXcxQjJjVXVoNHlCQWdNQkFBR2pnWTh3Z1l3dwpDUVlEVlIwVEJBSXdBREFMQmdOVkhROEVCQU1DQlBBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUZNR0ExVWRFUVJNTUVxQ0NXeHZZMkZzYUc5emRJSWxLaTVrYjJOclpYSXRZMjl0Y0c5elpTMXAKYm1sMExXTnZiblJoYVc1bGNpNXNiMk5oYkljRWZ3QUFBWWNRQUFBQUFBQUFBQUFBQUFBQUFBQUFBVEFOQmdrcQpoa2lHOXcwQkFRMEZBQU9DQWdFQUc0WWQvK3V0bDFPSUdMODd4TnBHZDJrOWlzWU9qVm43MyswL0FhYllockt2CkwvQUg2dTd5ZXZWSDcycHhac2ozWTNFL0pjZzI0WHVJVU1oZmFMeXNoakZFeFZrQi90enZNK3Nka3RMNFhMdjMKQm5XdHpDb29KUnY3M3ZFMWhxRDR4bjRUcjBxMTA5Q0JKOWkvUk84UG9yNFNmN2ZoMVNKeG5MVUdmV3Q4NFF5bgpzQWZRQTErZDlCL2luMEVMNmg0dXdnRDBBS1VYVUMzdkFSL0NHNDQ2bW4yWmdaMTE5bVlSZU5BWUpYYnorakRRCkhZSVBoWFRTSXI1a09aZmFtaWw3T1dKMWpNd0Q2bHo5NUFHZXBBVENUeU9zSzhpeVRjWHVxdUhCK3lRODBZcUEKY2grMHVYa3FkOGxJTHpmV0MyTjd2L3drbjJEOS9XT09zQ2FtZmVKRjBuSXhjVW1Wa3d1b0hLVWprMDA1UzZvVgp2MUFoV1Nkb0hBN29MQXdlcUZkUTh1WGVWOGhQVTRBMGVDRmU2bnFMV1JLdVNKNkc2TUJ6eXZFa21Ed1lzYW9mCkNyU1BHQklqMzE5a0R0QmhzR1NxbDdTTHVua05pQlM5T1pwU3FibnJYZE0zaUtYbkZBM1dZR0FnN1E3Zk5tUWMKS29QbEIxQjliZTNiZFN3UThSc3liQktYZ0Y5RVdWT1huRGF6QTdPd0tKbTE4MUc1a0NwK2J2NlJvYTJOSzNPVgpMQVlENTU1UVh5cXFLdldFaTNVYndTZi93R1duWFlIdnpML0Zadk5sVmxUTkNtNkNnMWEwQnJuR0V4ajNWV0VuCmJVenYrWUJ2bjVNc0lRM0F4bGJ5SUs2UkdQOElidVRLaFRQYnpVM2xiVEVJL3R3bnZENG1HSzdHc1l4RXlDVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBNUEzRmhneXJmbEJLdzRrZ3ZBZkNFMzl5UytxZTBwL0JGNTkzM09XUzFEbmk0Vlh3CldmRHZXc0tJMHJZcXp4UmJiMmFaeSs3ZmRnSmE4Y1hBZWhPNC9RelBJN2hvZDVFZzM1alNWYmQ1NDFYUmFLOC8Kemo2RzVsaVJwZ0FRYk45TE00SFo3QUZNMW1KVm42MVIrQS9hMmJDVVQvem1HM2tQanJHNGdXV0N1cGRoamZyVwpldHJOaGV0TU9tSlpYanlldDFsWUpRa1BZVFZ2NFFjQzRvYVBlRUxIbmRyMkw0N2hZS3hNbkFMd2p5TmZoS1ZkCnVHeisvM1M2ZzJ3KytZU0IwazFYZi9zblc0WVlEeE0yTzNPeG96eXRrc2M3eDhJM2YyQTJnZjBJZjMyQkN4cjYKSm40bmtRWHVRbktibGQ1K1ZFbC9ULytHZFBlMnB5dDNDNUordjZZZ2gvLzFJa3A1Y3p0UU5ydTI2MWZkbk5mbQpPeDZDcVNaS1ZzNWxPcWs3S3VQUUcrcGpvZy9SQ3p1VGI4ckpYZTVOcTh6VEl6U3dtM3lPVnl3V2M4OGtYS2c5CitSNUliNzExdjRDbEl6aVpBU2tjdnkvSlE3cWV3dDlOWTdEYVE1UThUeHc5KzFGY3lsaTdLL1FiRlUvSHVXZHUKVXh5YkdZdUl0ZzJEUTlhU1lvUXBQOGhPR2dSVUxTYng5M0V1bjIxUzhzbEJPK0VuMGpDRlR5OVJSck1rS2ZmbApDUllZUDNJUXZoejNMWlBCc1hyNEw3ZU56Um00OEJJRWtWdVcxM3JGMS8yWFQxNm5NVHA1Q2dMNzlmNjZKWTR5Cm1ublBlaXNJYUUxTHJiLzRZek9mZ1NsUTlUQlpwK2VJdERlb09DRExwaDhoaTQ5VERVSFp4UzZIaklFQ0F3RUEKQVFLQ0FnQmFhVk5MeDY0ZGo3dDBOZU15YUdqNnplWUVUdW5VV3QxMGZoWkpEd0xjL0c0RUk4djcvRmNJUm1OMApGaUIycEgxemR0dTJTK2R2bzVObWtwMnlTQ3RvdHpGUDJnWWdrUHJWYW9MSTFNcVA1Qy8zTHJNL0V1N3NWMlMyCnlRTzZCZlNNWVFpQ1ZpbWVQTEh4Y2djekx5WDJjOWo0dFN5TTY3dk5PSXdMVUxFNVJGYTZzUjFpNjJmYmxlTk0KcWp6LzdVeUhKL2FZQ0RWK3RtNjZhY3NzLzJmVnA3UDMweDBTMGJSc1hTS3FIMGc3bHl5QkxBWXgzWlJpdG1aVApRQkRmWHpjUXB2VHZtaVNLVm1rbllOaDVUVzY1Wm83eHgrYmRWUlFuZlg5ZW5YQkhDdnlqNkhnUDFxZmRDTnJpCm9Ra3BxMkd1RE0xYWE5VmtmZWg5OGU5cU9SUGlLelkyZG00RzgrS293dHArTDhaSDVxM0xFeDZzdWpObHFwTXAKSmpOL1I5Ni9yOUZsdUhlOTBXT1d3UnA2NnJIbjl6YWt0RUhHa1dDZG1JVGxFVlNFZlpBVC9VVjYxMS9SSHVUUQpLcjRXU09XbTdJNTl6TVFGOTdVNHdjQUk0SkRzajEvb0IvV3pDT0ptS2F1KzJUa3NFYmVTVkJJZ2JTS25OWmRGCjZ4R29mSlVZYXdwYVBBdk1yR3VHek93ZzNJY3oyUDgrMzZzZGg3OTEyTno4MFdjZmRtcUdpejV5SllueWhpZlYKbE1LVnFKYXBRUjdTMmFFZDJucVFXLyt4cWdJbzJhWFpRc2Job2lxNlhOMVEyRDR2L0ljeCsrSGlXZDRRYS9YSgpSNWJjOVpVc09UY2RXWkUxdi84UElaaHIxelNzSmQvbUhIeERCT0grREgzZkRUcXNnUUtDQVFFQS9KdS9aS1Q3CnZ0cU1uSUhHMDg0YW1CeU0veFJtTkVZVkhQL2ZGRXg1ZU1oem1LUjFmSEFxQ1ZzNkhFNEtHYXZ6NVA0SlRGRHoKR3ZpZ2VQaC9RbXZVOFlrNDc0TWZ0M1gzT1cvNDgxRy9RUXRVMVhvTWNoSHBaYlNiVXRTeHEyNVk1bnpMNWIzTApWbEt1cVRST2JMcXU3YktsQmxNVkJOU1BidXFrKzJsK0RGdkdFT2dIOVh3WFFtVGZTN2k3ZWxCSVpZdXB2STBUClhJZjlnRmhkRUpObmhYZldEdE9kSXBlTmt5aEFVM3A3bHFoR29iVTVocGVqb21xWVFxZGJzajRoMmxJVUIrbFMKcGwwc2xIcjhMb3Q0MWNnYmY3ekZ4R2ExcG0rdjZBQUZac2dFYnFWc240dU9nL1Z4T2FKRFIxQkM0VW9QWWZBeApwUkdSSE8vZUFmSnMrUUtDQVFFQTV4MmdUVHU0dVprNEcvZGJMQythTnBXRG9VOTZkTCtmeUFSQ0V1eThsWlFwClRvS0V1OUNIQXFTakJlckU5V05PQU9RQWJtNzNhaStsS2VpWHYzcnFDd1hLNU1JWmsxVFhLQWtzblJGNzBqc2cKYnA1bUY1M1RrTHJ2T0ROMlUzQjZOc0pNQkpHSjM1ZzhvaUN2VkJuNlU1OG9vL3ZpcnlwczhjKzE5M3RyZzdxdwp0T00vWGZHcjBBL2R0Skl3WS9YRVFpMFdhb0VSa21PWC9aeWFVNFBLTWpTazRtcmFjVTM0bUNrSDYzOTRQUm5mClJnbWpLbVphWVZSc2cvTHJSa1JKSUxFUHpUM2JOWjJMNVBUQmREU0FjWnYvZ05DeFZzSHFIZDROcGxmdDA4STMKUVZQMEdHL0pFckpnUUoySTRwK0pVQzFPZmtTYjNBNjdvY3FFRlBBbHlRS0NBUUVBbTk2aXg4Q0IwbTlhcWt2dAoyczNuWFFybytaQ2x6QVdlaTRsYkpsUlY4L0NFVzZESEdlVEFHNHZlSEk4TzdtNUxEWGF2V0Jidkd5cGxJcC83Ckxvb0pHSTBhdzdlK1AxOGNFS1lHRUdYVnhKWHdYOVZ5am9SODV4UDliNnZzZ2FLU1dvNlE1Zzhwdy9jNjdROW8KZ1BEa2RhbHc2S2tsWkJpZzlNajJ5bWQ2cnJlR1RQSlB6dXNtRXdMWlFna1lMYzRTRGc2U3l0U21LTWVFNWNnZwpqTlRYNE9Sa0Fqd1RUc0FEVE5WZWMrUTFGRzU3UHRiclN5Q1FpT3lMVFQybGVDT2NrZkZwaU1ReENwU2RxSFVHCjNOV1UxeDBsMHJreHN4SEpib3ltRjFyRCtucmJPVWI3OHFxVFl0dDFaU0c1cit4WGlGcEJpYVpEaTk1K0UwUHoKVW5JN1NRS0NBUUVBcHd2aDFwRUpCcFU1V2ZWaW44QlVYWW1aMTVsRHNHamt5MFJRb2E4YzY1eG9jc2VodXNLUgpJeGJ1Z2hOYmd1WGc5b0hWMGZ4QXRpNXoyYU8xTXdCYmM5WWUvVk5SK3d5Q2F2eWVrM1NVbzdKNjBabUp2eDRqClVlUGJqaXFjSnRrUWJNM285aEJmc0E0d0hSczB2cnY4RkQ3Z3VBNFNuWHN6dlYvZGJXQjJxSUxpd0F2VXZFazIKWHk5b2x1Qm5PNGppN3RYNThzY1JkVmFvLy9VV0VyRWFEMG0vdDZ0MThobGlTbEMxMmNDTG50WTViRDBCQTE5eAppaEhrVVViZVNTNklFS29KK3RYdndJUDhIbVBPQS9rQ3Nac0loUW5TZEJ1NjVSV2ZsaERONUpYbkxEL0xHWEtLCnlnbkZ5azVUSjBJYWxLbjZwd2RlQkNOZCtTWVFhN1hjQ1FLQ0FRRUFoUnBKWnQ0MFkvWlk0N0NZNXR5V0xDT1UKSms5UlVIcVNRNnVwK0xOSlFZeWw5ZHR0OG1OY2gxSFZkMDFDa0l6U0NlUzJmeHFndVp6bTk4WUovMTUxSE1ncAozVVBBRGI0bDZ6ekRsRjhIcHI3TElvWE14UThqR21CSVlrdlE0WWNXbGYzSUhmMHlBOTFYbGxYdEkyYXdoVzBWCjFqWFNQZE8zT2w5bEgyOS9RL2k0MnBnZGtZVk5iMkRDd0liQ3JaK21oN2hLMnd1VHFOemtYelozaW1HWHBES1QKL2tYdkNmcWRwRnFGRU51dHlDOWtPYlJyeTIxN1ltVVVFTXFpWFBtQ2c5SjlmWTJmSlRkamFId2JQU0hMTFFOZwpYb2ZzK1RJejExaEhFaHAvdVR6QUU5U2tvMUU1MHVHKzFjNm5ONDJ3dFo4eDE1aGFQWWhZZXNIR0JtT1d6UT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  - apiVersion: 'v1'
    kind: 'Secret'
    metadata:
      name: 'app'
    type: 'Opaque'
    stringData:
      TRUST_STORE_PASSWORD: 'password_of_6_chars_min'
      TLS_KEYSTORE_PASSWORD: 'pass'
  - apiVersion: 'apps/v1'
    kind: 'Deployment'
    metadata:
      name: 'app'
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: 'app'
      template:
        metadata:
          labels:
            app: 'app'
        spec:
          containers:
            - name: 'app'
              image: 'localhost:5000/app'
              imagePullPolicy: 'IfNotPresent'
              env:
                - name: 'JAVA_TOOL_OPTIONS'
                  value: '-XX:+PerfDisableSharedMem'
                - name: 'TRUST_STORE_FILE'
                  value: '/config/truststore.jks'
                - name: 'TRUST_STORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: 'app'
                      key: 'TRUST_STORE_PASSWORD'
                - name: 'SERVER_PORT'
                  value: '8080'
              ports:
                - containerPort: 8080
                  protocol: 'TCP'
              volumeMounts:
                - mountPath: '/config'
                  name: 'config-volume'
                  readOnly: true
                - mountPath: '/tmp'
                  name: 'app-tmp-volume'
              readinessProbe:
                httpGet:
                  path: '/actuator/health'
                  port: 8080
                  scheme: 'HTTP'
                initialDelaySeconds: 5
              livenessProbe:
                httpGet:
                  path: '/actuator/health'
                  port: 8080
                  scheme: 'HTTP'
                initialDelaySeconds: 5
              securityContext:
                readOnlyRootFilesystem: true
          initContainers:
            - name: 'init'
              image: 'localhost:5000/app-initializer'
              imagePullPolicy: 'IfNotPresent'
              env:
                - name: 'TRUST_STORE_FILE'
                  value: '/config/truststore.jks'
                - name: 'TRUST_STORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: 'app'
                      key: 'TRUST_STORE_PASSWORD'
              volumeMounts:
                - mountPath: '/config'
                  name: 'config-volume'
                - mountPath: '/tmp'
                  name: 'init-tmp-volume'
              securityContext:
                readOnlyRootFilesystem: true
          volumes:
            - name: 'config-volume'
              emptyDir: {}
            - name: 'app-tmp-volume'
              emptyDir: {}
            - name: 'init-tmp-volume'
              emptyDir: {}
  - apiVersion: 'v1'
    kind: 'Service'
    metadata:
      name: 'app'
    spec:
      ports:
        - name: 'http'
          port: 8080
          targetPort: 8080
          protocol: 'TCP'
      selector:
        app: 'app'
      type: 'ClusterIP'
  - apiVersion: 'networking.k8s.io/v1'
    kind: 'Ingress'
    metadata:
      name: 'app'
    spec:
      tls:
        - hosts:
            - 'app.docker-compose-init-container.local'
          secretName: 'app-ingress-tls'
      rules:
        - host: 'app.docker-compose-init-container.local'
          http:
            paths:
              - path: '/'
                pathType: 'Prefix'
                backend:
                  service:
                    name: 'app'
                    port:
                      number: 8080
