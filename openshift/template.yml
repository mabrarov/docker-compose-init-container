apiVersion: 'v1'
kind: 'Template'
labels:
  app: '${APP}'
parameters:
  - name: 'NAMESPACE'
    required: true
  - name: 'APP'
    required: true
  - name: 'REGISTRY'
    value: '172.30.1.1:5000'
    required: true
  - name: 'SERVER_PORT'
    value: '8443'
    required: true
  - name: 'TLS_KEY_ALIAS'
    value: 'alias'
    required: true
  - name: 'CONFIG_DIR'
    value: '/config'
    required: true
  - name: 'OPENSHIFT_CERTS_DIR'
    value: '/var/run/secrets/openshift.io/services_servicing_certs'
    required: true
objects:
  - apiVersion: 'v1'
    kind: 'Secret'
    metadata:
      name: '${APP}'
    type: 'Opaque'
    stringData:
      TRUST_STORE_PASSWORD: 'password_of_6_chars_min'
      TLS_KEYSTORE_PASSWORD: 'pass'
  - apiVersion: 'v1'
    kind: 'DeploymentConfig'
    metadata:
      name: '${APP}'
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: '${APP}'
        spec:
          containers:
            - name: 'app'
              image: '${REGISTRY}/${NAMESPACE}/${APP}'
              env:
                - name: 'JAVA_TOOL_OPTIONS'
                  value: '-Djavax.net.ssl.trustStore=${CONFIG_DIR}/truststore.jks'
                - name: 'TRUST_STORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: '${APP}'
                      key: 'TRUST_STORE_PASSWORD'
                - name: 'SERVER_PORT'
                  value: '${SERVER_PORT}'
                - name: 'SERVER_SSL_ENABLED'
                  value: 'true'
                - name: 'SERVER_SSL_KEY_STORE'
                  value: '${CONFIG_DIR}/keystore.p12'
                - name: 'SERVER_SSL_KEY_STORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: '${APP}'
                      key: 'TLS_KEYSTORE_PASSWORD'
                - name: 'SERVER_SSL_KEY_STORE_TYPE'
                  value: 'PKCS12'
                - name: 'SERVER_SSL_KEY_ALIAS'
                  value: '${TLS_KEY_ALIAS}'
              ports:
                - containerPort: ${{SERVER_PORT}}
                  protocol: 'TCP'
              volumeMounts:
                - mountPath: '${CONFIG_DIR}'
                  name: 'config-volume'
                  readOnly: true
                - mountPath: '/tmp'
                  name: 'tmp-volume'
              readinessProbe:
                httpGet:
                  path: '/actuator/health'
                  port: ${{SERVER_PORT}}
                  scheme: 'HTTPS'
              livenessProbe:
                httpGet:
                  path: '/actuator/health'
                  port: ${{SERVER_PORT}}
                  scheme: 'HTTPS'
              securityContext:
                readOnlyRootFilesystem: true
          initContainers:
            - name: 'init'
              image: '${REGISTRY}/${NAMESPACE}/${APP}-initializer'
              env:
                - name: 'CA_BUNDLE_FILE'
                  value: '/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt'
                - name: 'TRUST_STORE_FILE'
                  value: '${CONFIG_DIR}/truststore.jks'
                - name: 'TRUST_STORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: '${APP}'
                      key: 'TRUST_STORE_PASSWORD'
                - name: 'CRT_FILE'
                  value: '${OPENSHIFT_CERTS_DIR}/tls.crt'
                - name: 'KEY_FILE'
                  value: '${OPENSHIFT_CERTS_DIR}/tls.key'
                - name: 'KEYSTORE_FILE'
                  value: '${CONFIG_DIR}/keystore.p12'
                - name: 'KEYSTORE_PASSWORD'
                  valueFrom:
                    secretKeyRef:
                      name: '${APP}'
                      key: 'TLS_KEYSTORE_PASSWORD'
                - name: 'KEY_ALIAS'
                  value: '${TLS_KEY_ALIAS}'
              volumeMounts:
                - mountPath: '${CONFIG_DIR}'
                  name: 'config-volume'
                - mountPath: '${OPENSHIFT_CERTS_DIR}'
                  name: 'openshift-certs-volume'
                  readOnly: true
          volumes:
            - name: 'config-volume'
              emptyDir: {}
            - name: 'tmp-volume'
              emptyDir: {}
            - name: 'openshift-certs-volume'
              secret:
                secretName: 'openshift-certs'
  - apiVersion: 'v1'
    kind: 'Service'
    metadata:
      name: '${APP}'
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: 'openshift-certs'
    spec:
      ports:
        - name: 'https'
          port: ${{SERVER_PORT}}
          targetPort: ${{SERVER_PORT}}
          protocol: 'TCP'
      selector:
        deploymentconfig: '${APP}'
      type: 'ClusterIP'
  - apiVersion: 'v1'
    kind: 'Route'
    metadata:
      name: '${APP}'
    spec:
      host: '${APP}.router.default.svc.cluster.local'
      port:
        targetPort: 'https'
      tls:
        insecureEdgeTerminationPolicy: 'Redirect'
        termination: 'reencrypt'
      to:
        kind: 'Service'
        name: '${APP}'
      wildcardPolicy: 'None'